{"version":3,"sources":["../../src/controllers/registerController.js"],"names":["getRegisterPage","req","res","render","errors","flash","createNewUser","errorsArr","validationErrors","isEmpty","Object","values","mapped","forEach","item","push","msg","redirect","newUser","fullname","body","email","password","registerService","module","exports"],"mappings":";;AAAA;;AACA;;;;;;;;AAEA,IAAIA,kBAAkB,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAChC,WAAOA,IAAIC,MAAJ,CAAW,cAAX,EAA2B;AAC9BC,gBAAQH,IAAII,KAAJ,CAAU,QAAV;AADsB,KAA3B,CAAP;AAGH,CAJD;;AAMA,IAAIC;AAAA,uEAAgB,iBAAML,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACIK,iCAFY,GAEA,EAFA;AAGZC,wCAHY,GAGO,wCAAiBP,GAAjB,CAHP;;AAAA,4BAIZO,iBAAiBC,OAAjB,EAJY;AAAA;AAAA;AAAA;;AAKRL,8BALQ,GAKCM,OAAOC,MAAP,CAAcH,iBAAiBI,MAAjB,EAAd,CALD;;AAMZR,+BAAOS,OAAP,CAAe,UAACC,IAAD,EAAU;AACrBP,sCAAUQ,IAAV,CAAeD,KAAKE,GAApB;AACH,yBAFD;AAGAf,4BAAII,KAAJ,CAAU,QAAV,EAAoBE,SAApB;AATY,yDAULL,IAAIe,QAAJ,CAAa,WAAb,CAVK;;AAAA;AAAA;AAcRC,+BAdQ,GAcE;AACVC,sCAAUlB,IAAImB,IAAJ,CAASD,QADT;AAEVE,mCAAOpB,IAAImB,IAAJ,CAASC,KAFN;AAGVC,sCAAUrB,IAAImB,IAAJ,CAASE;AAHT,yBAdF;AAAA;AAAA,+BAmBNC,0BAAgBjB,aAAhB,CAA8BY,OAA9B,CAnBM;;AAAA;AAAA,yDAoBLhB,IAAIe,QAAJ,CAAa,QAAb,CApBK;;AAAA;AAAA;AAAA;;AAuBZhB,4BAAII,KAAJ,CAAU,QAAV;AAvBY,yDAwBLH,IAAIe,QAAJ,CAAa,WAAb,CAxBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAJ;;AA4BAO,OAAOC,OAAP,GAAiB;AACbzB,qBAAiBA,eADJ;AAEbM,mBAAeA;AAFF,CAAjB","file":"registerController.js","sourcesContent":["import {validationResult} from \"express-validator\";\r\nimport registerService from \"../services/registerService\"\r\n\r\nlet getRegisterPage = (req, res) => {\r\n    return res.render(\"register.ejs\", {\r\n        errors: req.flash(\"errors\")\r\n    });\r\n}\r\n\r\nlet createNewUser = async(req, res) => {\r\n    // validate all required fields\r\n    let errorsArr = [];\r\n    let validationErrors = validationResult(req);\r\n    if(!validationErrors.isEmpty()){\r\n        let errors = Object.values(validationErrors.mapped());\r\n        errors.forEach((item) => {\r\n            errorsArr.push(item.msg);\r\n        });\r\n        req.flash(\"errors\", errorsArr);\r\n        return res.redirect(\"/register\");\r\n    }\r\n    // create a new user\r\n    try {\r\n        let newUser = {\r\n            fullname: req.body.fullname,\r\n            email: req.body.email,\r\n            password: req.body.password\r\n        };\r\n        await registerService.createNewUser(newUser)\r\n        return res.redirect(\"/login\");\r\n        \r\n    } catch (e) {\r\n        req.flash(\"errors\", e);\r\n        return res.redirect(\"/register\");\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    getRegisterPage: getRegisterPage,\r\n    createNewUser: createNewUser\r\n}"]}