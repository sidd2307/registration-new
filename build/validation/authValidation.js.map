{"version":3,"sources":["../../src/validation/authValidation.js"],"names":["validateRegister","isEmail","trim","isLength","min","custom","value","req","body","password","module","exports"],"mappings":";;AAAA;;AAEA,IAAIA,mBAAmB,CACnB,6BAAM,OAAN,EAAe,eAAf,EAAgCC,OAAhC,GAA0CC,IAA1C,EADmB,EAGnB,6BAAM,UAAN,EAAkB,yDAAlB,EAA6EC,QAA7E,CAAsF,EAAEC,KAAK,CAAP,EAAtF,CAHmB,EAKnB,6BAAM,sBAAN,EAA8B,yBAA9B,EAAyDC,MAAzD,CAAgE,UAACC,KAAD,QAAoB;AAAA,QAAVC,GAAU,QAAVA,GAAU;;AAChF,WAAOD,UAAUC,IAAIC,IAAJ,CAASC,QAA1B;AACH,CAFD,CALmB,CAAvB;;AAWAC,OAAOC,OAAP,GAAiB;AACbX,sBAAkBA;AADL,CAAjB","file":"authValidation.js","sourcesContent":["import {check, validationResult} from \"express-validator\";\r\n\r\nlet validateRegister = [\r\n    check(\"email\", \"Invalid email\").isEmail().trim(),\r\n\r\n    check(\"password\", \"Invalid password. Password must be atleast 2 chars long\").isLength({ min: 2 }),\r\n\r\n    check(\"confirmationPassword\", \"Passwords do not match!\").custom((value, { req }) => {\r\n        return value === req.body.password\r\n    }),\r\n    \r\n];\r\n\r\nmodule.exports = {\r\n    validateRegister: validateRegister\r\n}"]}