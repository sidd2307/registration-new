{"version":3,"sources":["../src/server.js"],"names":["require","config","app","use","bodyParser","json","urlencoded","extended","secret","resave","saveUninitialized","cookie","maxAge","passport","initialize","session","port","process","env","PORT","listen","console","log"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AARAA,QAAQ,QAAR,EAAkBC,MAAlB;;;AAUA,IAAIC,MAAM,wBAAV;;AAEA;AACAA,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEA;AACAL,IAAIC,GAAJ,CAAQ,8BAAQ;AACZK,YAAQ,QADI;AAEZC,YAAQ,IAFI;AAGZC,uBAAmB,KAHP;AAIZC,YAAQ;AACJC,gBAAQ,OAAO,EAAP,GAAY,EAAZ,GAAiB;AADrB;AAJI,CAAR,CAAR;;AASA;AACAV,IAAIC,GAAJ,CAAQ,6BAAR;;AAEA;AACA,0BAAiBD,GAAjB;;AAEA;AACAA,IAAIC,GAAJ,CAAQU,mBAASC,UAAT,EAAR;AACAZ,IAAIC,GAAJ,CAAQU,mBAASE,OAAT,EAAR;;AAEA;AACA,mBAAcb,GAAd;;AAEA,IAAIc,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;AACAjB,IAAIkB,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,WAAKK,QAAQC,GAAR,6DAAsEN,IAAtE,OAAL;AAAA,CAAjB","file":"server.js","sourcesContent":["require('dotenv').config();\r\nimport express from \"express\";\r\nimport configViewEngine from \"./configs/viewEngine\";\r\nimport initWebRoutes from \"./routes/web\";\r\nimport bodyParser from \"body-parser\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport connectFlash from \"connect-flash\"\r\nimport session from \"express-session\"\r\nimport passport from \"passport\"\r\n\r\nlet app = express();\r\n\r\n// Enable body parser post data\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// config session\r\napp.use(session({\r\n    secret: 'secret',\r\n    resave: true,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n        maxAge: 1000 * 60 * 60 * 24\r\n    }\r\n}));\r\n\r\n// Enable flash message\r\napp.use(connectFlash());\r\n\r\n//Config view engine\r\nconfigViewEngine(app);\r\n\r\n// config passport middleware\r\napp.use(passport.initialize());\r\napp.use(passport.session())\r\n\r\n// init all web routes\r\ninitWebRoutes(app);\r\n\r\nlet port = process.env.PORT || 8080;\r\napp.listen(port, () =>console.log(`Building a login system with NodeJS is running on port ${port}!`));\r\n"]}